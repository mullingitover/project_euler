# Problem 12
# The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:
# 
# 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
# 
# Let us list the factors of the first seven triangle numbers:
# 
#  1: 1
#  3: 1,3
#  6: 1,2,3,6
# 10: 1,2,5,10
# 15: 1,3,5,15
# 21: 1,3,7,21
# 28: 1,2,4,7,14,28
# We can see that 28 is the first triangle number to have over five divisors.
# 
# What is the value of the first triangle number to have over five hundred divisors?

def is_prime?(n)
return true if n <= 2
return false if n & 1 == 0
# runs the block for each number from 2 to sqrt(n)
# only returns true if the block *never* returns true
(3..(Math.sqrt(n).to_i)).step(2).none? { |i| n%i == 0 }
end


def get_divisors(n = 1)
# return 2 if is_prime?(n)
  counter = 1
  (1..(n / 2)).each do |i|
    counter += 1 if n % i == 0
  end
  return counter
end

i = 1
n = 2
while true do 
  values = get_divisors(i)
  if  values > 500 
    puts i.to_s + " has more than 500 factors"
    break
  end
    puts i.to_s + " has " + values.to_s
  i += n
  n += 1
end