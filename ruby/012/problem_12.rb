# Problem 12
# The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:
# 
# 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
# 
# Let us list the factors of the first seven triangle numbers:
# 
#  1: 1
#  3: 1,3
#  6: 1,2,3,6
# 10: 1,2,5,10
# 15: 1,3,5,15
# 21: 1,3,7,21
# 28: 1,2,4,7,14,28
# We can see that 28 is the first triangle number to have over five divisors.
# 
# What is the value of the first triangle number to have over five hundred divisors?

trinumber = 1

def tri(i)
	return (i * (i + 1)) / 2
end
	
def get_divisors(n = 1)
# return 2 if is_prime?(n)
  counter = 1
  (1..(n / 2)).each do |i|
    counter += 1 if n % i == 0
  end
  return counter
end

i = 1
while true do 
  if i % 2 == 1  
    divisors = get_divisors(i) * get_divisors((i + 1) / 2) 
  else
    divisors = get_divisors( i / 2) * get_divisors( i + 1)
  end
  
  if divisors >= 500 
    puts tri(i).to_s + " with " + divisors.to_s + " divisors."  
    break
  end
  i += 1
  puts i.to_s + ":" + divisors.to_s if divisors > 100
end